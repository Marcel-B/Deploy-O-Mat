[
    {
      "Id" : "67319559-c37d-4930-a891-a41435b23196",
      "Created" : "2020-04-13T18:50:34Z",
      "Updated" : "2020-04-19T20:00:34Z",
      "StartTime" : "2020-04-19T20:00:35Z",
      "Name" : "angulair",
      "Tag" : "latest",
      "Pusher" : "millegalb",
      "Namespace" : "millegalb",
      "Owner" : "millegalb",
      "RepoName" : "millegalb\/angulair",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/millegalb\/angulair",
      "Dockerfile" : null,
      "FullDescription" : null,
      "Description" : "",
      "Status" : "Active",
      "Stars" : 0,
      "IsOfficial" : false,
      "IsPrivate" : false,
      "BuildId" : "b1a8623f-1cdb-488d-845d-d6d2703a1e8a",
      "IsActive" : true
    },
    {
      "Id" : "ec205055-de8b-4cc6-a122-373afcdb3f02",
      "Created" : "2020-04-14T12:12:16Z",
      "Updated" : "2020-04-14T13:08:28Z",
      "StartTime" : null,
      "Name" : "slipways-api",
      "Tag" : "Hub",
      "Pusher" : "millegalb",
      "Namespace" : "millegalb",
      "Owner" : "millegalb",
      "RepoName" : "millegalb\/slipways-api",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/millegalb\/slipways-api",
      "Dockerfile" : "#See https:\/\/aka.ms\/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.\n\nFROM mcr.microsoft.com\/dotnet\/core\/aspnet:3.1-buster-slim AS base\nWORKDIR \/app\nEXPOSE 8095\n\nFROM mcr.microsoft.com\/dotnet\/core\/sdk:3.1-buster AS build\nWORKDIR \/src\n\nCOPY [\".\/BackEnd\/Slipways.API\/Slipways.API\/Slipways.API.csproj\", \"BackEnd\/Slipways.API\/Slipways.API\/\"]\nCOPY [\".\/BussinessLayer\/Slipways.Data\/Slipways.Data\/Slipways.Data.csproj\", \"BussinessLayer\/Slipways.Data\/Slipways.Data\/\"]\n\nRUN dotnet restore \"BackEnd\/Slipways.API\/Slipways.API\/Slipways.API.csproj\"\n\nCOPY [\".\/BackEnd\/Slipways.API\/Slipways.API\/\", \"BackEnd\/Slipways.API\/Slipways.API\/\"]\nCOPY [\".\/BussinessLayer\/Slipways.Data\/Slipways.Data\/\", \"BussinessLayer\/Slipways.Data\/Slipways.Data\/\"]\n\nWORKDIR \"\/src\/BackEnd\/Slipways.API\/Slipways.API\"\n\nRUN dotnet build \"Slipways.API.csproj\" -c Release -o \/app\/build\n\nFROM build AS publish\nRUN dotnet publish \"Slipways.API.csproj\" -c Release -o \/app\/publish\n\nFROM base AS final\nWORKDIR \/app\nCOPY --from=publish \/app\/publish .\nENTRYPOINT [\"dotnet\", \"Slipways.API.dll\"]",
      "FullDescription" : null,
      "Description" : "",
      "Status" : "Active",
      "Stars" : 0,
      "IsOfficial" : false,
      "IsPrivate" : false,
      "BuildId" : "48efefbe-3a83-4e86-9aba-f93f7412570e",
      "IsActive" : false
    },
    {
      "Id" : "7b491b3e-cc08-4624-afd6-a8f6872f7d2a",
      "Created" : "2020-04-14T12:26:21Z",
      "Updated" : "2020-04-14T19:49:47Z",
      "StartTime" : null,
      "Name" : "slipways-graphql",
      "Tag" : "latest",
      "Pusher" : "millegalb",
      "Namespace" : "millegalb",
      "Owner" : "millegalb",
      "RepoName" : "millegalb\/slipways-graphql",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/millegalb\/slipways-graphql",
      "Dockerfile" : "#See https:\/\/aka.ms\/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.\n\nFROM mcr.microsoft.com\/dotnet\/core\/aspnet:3.1-buster-slim AS base\nWORKDIR \/app\nEXPOSE 5000\n\nFROM mcr.microsoft.com\/dotnet\/core\/sdk:3.1-buster AS build\nWORKDIR \/src\n\nCOPY [\".\/BackEnd\/Slipways.GraphQL\/Slipways.GraphQL\/Slipways.GraphQL.csproj\", \"BackEnd\/Slipways.GraphQL\/Slipways.GraphQL\/\"]\nCOPY [\".\/BussinessLayer\/Slipways.Data\/Slipways.Data\/Slipways.Data.csproj\", \"BussinessLayer\/Slipways.Data\/Slipways.Data\/\"]\n\nRUN dotnet restore \"BackEnd\/Slipways.GraphQL\/Slipways.GraphQL\/Slipways.GraphQL.csproj\"\n\nCOPY [\".\/BackEnd\/Slipways.GraphQL\/Slipways.GraphQL\/\", \"BackEnd\/Slipways.GraphQL\/Slipways.GraphQL\/\"]\nCOPY [\".\/BussinessLayer\/Slipways.Data\/Slipways.Data\/\", \"BussinessLayer\/Slipways.Data\/Slipways.Data\/\"]\n\nWORKDIR \"\/src\/BackEnd\/Slipways.GraphQL\/Slipways.GraphQL\"\n\nRUN dotnet build \"Slipways.GraphQL.csproj\" -c Release -o \/app\/build\n\nFROM build AS publish\nRUN dotnet publish \"Slipways.GraphQL.csproj\" -c Release -o \/app\/publish\n\nFROM base AS final\nWORKDIR \/app\nCOPY --from=publish \/app\/publish .\nENTRYPOINT [\"dotnet\", \"Slipways.GraphQL.dll\"]",
      "FullDescription" : null,
      "Description" : "",
      "Status" : "Active",
      "Stars" : 0,
      "IsOfficial" : false,
      "IsPrivate" : false,
      "BuildId" : "0e30b289-0fa0-4b77-9b00-4934e470d363",
      "IsActive" : false
    },
    {
      "Id" : "d25d5818-fb5c-42af-a1a8-a72aa049f38a",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : "2020-04-20T20:14:17Z",
      "Name" : "visualizer",
      "Tag" : "latest",
      "Pusher" : "\ndockersamples",
      "Namespace" : "\ndockersamples",
      "Owner" : "\ndockersamples",
      "RepoName" : "dockersamples\/visualizer",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/dockersamples\/visualizer",
      "Dockerfile" : "#Latest version of node tested on.\nFROM node:8-alpine AS dist\n\nWORKDIR \/app\n\n# Only run npm install if these files change.\nADD .\/package.json \/app\/package.json\n\n# Install dependencies\nRUN npm install\n\n# Add the rest of the sources\nADD . \/app\n\nRUN npm run dist\n\n\nFROM node:8-alpine\n\nWORKDIR \/app\nADD .\/cfg\/* \/app\/cfg\/\nADD .\/src\/* \/app\/src\/\nADD .\/create-index.js \/app\nADD .\/index.tpl \/app\nADD .\/server.js \/app\nADD .\/healthcheck.js \/app\nCOPY --from=dist \/app\/dist\/* \/app\/dist\/\nCOPY --from=dist \/app\/package.json \/app\/package.json\nRUN npm install\n\n# MS : Number of milliseconds between polling requests. Default is 1000.\n# CTX_ROOT : Context root of the application. Default is \/\nENV MS=1000 CTX_ROOT=\/\n\nEXPOSE 8080\n\nHEALTHCHECK CMD node \/app\/healthcheck.js || exit 1\n\nCMD [\"npm\",\"start\"]",
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "d25d5818-fb5c-42af-a1a8-a72aa049f38a",
      "IsActive" : true
    },
    {
      "Id" : "ce197ecd-2225-430a-8611-740a6b7acebd",
      "Created" : "2019-10-14T07:45:20Z",
      "Updated" : "2020-04-28T03:27:54Z",
      "StartTime" : "2020-04-28T03:27:56Z",
      "Name" : "feinstaubserver",
      "Tag" : "latest",
      "Pusher" : "mbodenstein",
      "Namespace" : "mbodenstein",
      "Owner" : "mbodenstein",
      "RepoName" : "mbodenstein\/feinstaubserver",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/mbodenstein\/feinstaubserver",
      "Dockerfile" : "ï»¿FROM mcr.microsoft.com\/dotnet\/core\/sdk:2.2 AS build-env\nEXPOSE 5000\n\nWORKDIR \/src\nCOPY FeinstaubServer\/FeinstaubServer.csproj .\/\nRUN dotnet restore\nCOPY FeinstaubServer\/ .\/\nRUN dotnet publish -c Release -o .\/out\n\nFROM mcr.microsoft.com\/dotnet\/core\/aspnet:2.2\nWORKDIR \/src\nCOPY FeinstaubServer\/Entities\/Addresses.csv \/src\/Entities\/\nCOPY --from=build-env \/src\/out .\nENTRYPOINT [\"dotnet\", \"FeinstaubServer.dll\"]",
      "FullDescription" : null,
      "Description" : "",
      "Status" : "Active",
      "Stars" : 0,
      "IsOfficial" : false,
      "IsPrivate" : false,
      "BuildId" : "b9b259b6-2532-49fd-8f76-61c38b78b251",
      "IsActive" : true
    },
    {
      "Id" : "8b101a02-5a4e-48eb-b967-405804bdf1bc",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : null,
      "Name" : "traefik",
      "Tag" : "v2.2.0",
      "Pusher" : "traefik",
      "Namespace" : "traefik",
      "Owner" : "traefik",
      "RepoName" : "traefik",
      "RepoUrl" : null,
      "Dockerfile" : "FROM alpine:3.11\nRUN apk --no-cache add ca-certificates tzdata\nRUN set -ex; \\\n\tapkArch=\"$(apk --print-arch)\"; \\\n\tcase \"$apkArch\" in \\\n\t\tarmhf) arch='armv6' ;; \\\n\t\taarch64) arch='arm64' ;; \\\n\t\tx86_64) arch='amd64' ;; \\\n\t\t*) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;; \\\n\tesac; \\\n\twget --quiet -O \/tmp\/traefik.tar.gz \"https:\/\/github.com\/containous\/traefik\/releases\/download\/v2.2.0\/traefik_v2.2.0_linux_$arch.tar.gz\"; \\\n\ttar xzvf \/tmp\/traefik.tar.gz -C \/usr\/local\/bin traefik; \\\n\trm -f \/tmp\/traefik.tar.gz; \\\n\tchmod +x \/usr\/local\/bin\/traefik\nCOPY entrypoint.sh \/\nEXPOSE 80\nENTRYPOINT [\"\/entrypoint.sh\"]\nCMD [\"traefik\"]\n\n# Metadata\nLABEL org.opencontainers.image.vendor=\"Containous\" \\\n\torg.opencontainers.image.url=\"https:\/\/traefik.io\" \\\n\torg.opencontainers.image.title=\"Traefik\" \\\n\torg.opencontainers.image.description=\"A modern reverse-proxy\" \\\n\torg.opencontainers.image.version=\"v2.2.0\" \\\n\torg.opencontainers.image.documentation=\"https:\/\/docs.traefik.io\"",
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "724a8216-f4fe-4ba4-9cf4-aad445763f3e",
      "IsActive" : true
    },
    {
      "Id" : "aa3f2ac2-13e9-4357-8f9e-6f7d610ac354",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : null,
      "Name" : "sql-server",
      "Tag" : "2017-latest-ubuntu",
      "Pusher" : "microsoft",
      "Namespace" : "microsoft",
      "Owner" : "microsoft",
      "RepoName" : "mcr.microsoft.com\/mssql\/server",
      "RepoUrl" : null,
      "Dockerfile" : null,
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "33c4171b-b326-4e88-9fb4-5dd861277a73",
      "IsActive" : true
    },
    {
      "Id" : "0cb376d1-2b18-4244-a996-a28f60baac63",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : null,
      "Name" : "sql-server",
      "Tag" : "2017-latest",
      "Pusher" : "microsoft",
      "Namespace" : "microsoft",
      "Owner" : "microsoft",
      "RepoName" : "mcr.microsoft.com\/mssql\/server",
      "RepoUrl" : null,
      "Dockerfile" : null,
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "9723b445-cde8-45ed-af52-e26fad8330e6",
      "IsActive" : true
    },
    {
      "Id" : "3209f142-be3c-40a8-8b0b-595994924a6e",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : null,
      "Name" : "postgresql",
      "Tag" : "latest",
      "Pusher" : "postgres",
      "Namespace" : "postgres",
      "Owner" : "postgres",
      "RepoName" : "postgres",
      "RepoUrl" : null,
      "Dockerfile" : null,
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "ac65234b-f0df-489d-bbeb-a26f64548268",
      "IsActive" : true
    },
    {
      "Id" : "c09e0a0f-2a3c-4ec4-bf4f-cf7df088a12a",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : null,
      "Name" : "rabbitmq",
      "Tag" : "3-management",
      "Pusher" : "rabbitmq",
      "Namespace" : "rabbitmq",
      "Owner" : "rabbitmq",
      "RepoName" : "rabbitmq",
      "RepoUrl" : null,
      "Dockerfile" : null,
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "622bee15-0ad4-4bbe-99c4-2501da6d584e",
      "IsActive" : true
    },
    {
      "Id" : "c9004441-322c-4381-9561-ce8d17b0f24c",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : null,
      "Name" : "prometheus",
      "Tag" : "latest",
      "Pusher" : "prom",
      "Namespace" : "prom",
      "Owner" : "prom",
      "RepoName" : "prom\/prometheus",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/prom\/prometheus",
      "Dockerfile" : null,
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "afc08583-4109-4b56-9fa8-110586256446",
      "IsActive" : true
    },
    {
      "Id" : "fe74ffb8-54db-4e76-83c4-c3cce5bc9ea5",
      "Created" : "2020-04-20T10:00:00Z",
      "Updated" : null,
      "StartTime" : null,
      "Name" : "grafana",
      "Tag" : "latest",
      "Pusher" : "grafana",
      "Namespace" : "grafana",
      "Owner" : "grafana",
      "RepoName" : "grafana\/grafana",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/grafana\/grafana",
      "Dockerfile" : null,
      "FullDescription" : null,
      "Description" : null,
      "Status" : null,
      "Stars" : 0,
      "IsOfficial" : true,
      "IsPrivate" : false,
      "BuildId" : "2af5110e-4eb0-476b-8abc-7269529995fc",
      "IsActive" : true
    },
    {
      "Id" : "a71bb297-acea-4cb9-a1f4-af0c45d2b512",
      "Created" : "2020-04-04T20:27:54Z",
      "Updated" : "2020-04-30T16:49:42Z",
      "StartTime" : "2020-04-30T16:49:44Z",
      "Name" : "deploy-o-mat",
      "Tag" : "latest",
      "Pusher" : "millegalb",
      "Namespace" : "millegalb",
      "Owner" : "millegalb",
      "RepoName" : "millegalb\/deploy-o-mat",
      "RepoUrl" : "https:\/\/hub.docker.com\/r\/millegalb\/deploy-o-mat",
      "Dockerfile" : "#See https:\/\/aka.ms\/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.\n\nFROM mcr.microsoft.com\/dotnet\/core\/aspnet:3.1-buster-slim AS base\nEXPOSE 5000\n\nFROM mcr.microsoft.com\/dotnet\/core\/sdk:3.1-buster AS build\nWORKDIR \/src\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\n\n# install NodeJS 13.x\n# see https:\/\/github.com\/nodesource\/distributions\/blob\/master\/README.md#deb\nRUN apt-get update -yq\nRUN apt-get install curl gnupg -yq\nRUN curl -sL https:\/\/deb.nodesource.com\/setup_13.x | bash -\nRUN apt-get install -y nodejs\n\n# Copy only API for restore packages\nCOPY [\"Deploy_O_Mat.Web.API\/Deploy_O_Mat.Web.API.csproj\", \"Deploy_O_Mat.Web.API\/\"]\n\n# Restore packages\nRUN dotnet restore \"Deploy_O_Mat.Web.API\/Deploy_O_Mat.Web.API.csproj\"\n\n# Copy rest of the Project\nCOPY . .\n\n# Build API\nWORKDIR \"\/src\/Deploy_O_Mat.Web.API\"\nRUN dotnet build \"Deploy_O_Mat.Web.API.csproj\" -c Release -o \/app\/build\n\n# Restore and Build SPA\nWORKDIR \"\/src\/deploy-o-mat\"\nRUN ls\nRUN npm install\nRUN npm run build\n\n# Publish\nWORKDIR \"\/src\/Deploy_O_Mat.Web.API\"\nFROM build AS publish\nRUN dotnet publish \"Deploy_O_Mat.Web.API.csproj\" -c Release -o \/app\/publish\n\nFROM base AS final\nWORKDIR \/app\nCOPY --from=publish \/app\/publish .\nENTRYPOINT [\"dotnet\", \"Deploy_O_Mat.Web.API.dll\"]\n",
      "FullDescription" : "# Deploy-O-Mat\n\n![.NET Core](https:\/\/github.com\/Marcel-B\/Deploy-O-Mat\/workflows\/.NET%20Core\/badge.svg)\n\n![Docker Image CI](https:\/\/github.com\/Marcel-B\/Deploy-O-Mat\/workflows\/Docker%20Image%20CI\/badge.svg)\n\n![Publish Docker](https:\/\/github.com\/Marcel-B\/Deploy-O-Mat\/workflows\/Publish%20Docker\/badge.svg)\n\n",
      "Description" : "Just a little deploy tool for ci",
      "Status" : "Active",
      "Stars" : 0,
      "IsOfficial" : false,
      "IsPrivate" : false,
      "BuildId" : "d7ab490a-bb5e-46e1-ba8c-64d74a545680",
      "IsActive" : true
    }
  ]
